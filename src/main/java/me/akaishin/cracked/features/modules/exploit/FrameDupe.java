package me.akaishin.cracked.features.modules.exploit;

import me.akaishin.cracked.features.modules.Module;
import me.akaishin.cracked.features.setting.Setting;

import me.akaishin.cracked.features.modules.Module;
import me.akaishin.cracked.features.setting.Setting;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityItemFrame;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemShulkerBox;
import net.minecraft.util.EnumHand;
import net.minecraftforge.fml.common.gameevent.TickEvent;

public class FrameDupe extends Module {

    private final Setting<Boolean> shulkersonly  = this.register(new Setting<Boolean>("ShulkersOnly", true));
    private final Setting<Integer> range  = this.register(new Setting<Integer>("Range", 5, 0, 6));
    private final Setting<Integer> turns  = this.register(new Setting<Integer>("Turns", 1, 0, 3));
    private final Setting<Integer> ticks  = this.register(new Setting<Integer>("Ticks", 10, 1, 20));

    private int timeout_ticks = 0;

    public FrameDupe() {
        super("FrameDupe", "Best on Bypass", Module.Category.EXPLOIT, true, false ,false);
    }

    //@Override
    public void update(TickEvent tick) {
        if (mc.player != null && mc.world != null) {

            if (shulkersonly.getValue()) {
                int shulker_slot = getShulkerSlot();
                if (shulker_slot != -1) {
                    mc.player.inventory.currentItem = shulker_slot;
                }
            }

            for (Entity frame : mc.world.loadedEntityList) {
                if (frame instanceof EntityItemFrame) {
                    if (mc.player.getDistance(frame) <= range.getValue()) {
                        if (timeout_ticks >= ticks.getValue()) {
                            if (((EntityItemFrame) frame).getDisplayedItem().getItem() == Items.AIR && !mc.player.getHeldItemMainhand().isEmpty) {
                                mc.playerController.interactWithEntity(mc.player, frame, EnumHand.MAIN_HAND);
                            }
                            if (((EntityItemFrame) frame).getDisplayedItem().getItem() != Items.AIR) {
                                for (int i = 0; i < turns.getValue(); i++) {
                                    mc.playerController.interactWithEntity(mc.player, frame, EnumHand.MAIN_HAND);
                                }
                                mc.playerController.attackEntity(mc.player, frame);
                                timeout_ticks = 0;
                            }
                        }
                        ++timeout_ticks;
                    }
                }
            }

        }
    }

    private int getShulkerSlot() {
        int shulker_slot = -1;
        for (int i = 0; i < 9; i++) {
            Item item = mc.player.inventory.getStackInSlot(i).getItem();
            if (item instanceof ItemShulkerBox) shulker_slot = i;
        }
        return shulker_slot;
    }

}
